static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8090   # Envoy listens for Web gRPC requests
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: grpc_backend
              cors:
                allow_origin_string_match:
                  - prefix: "*"
                allow_methods: "GET, PUT, DELETE, POST, OPTIONS"
                allow_headers: "keep-alive, user-agent, cache-control, content-type, authorization"
                max_age: "1728000"
                expose_headers: "grpc-status, grpc-message"
          http_filters:
          - name: envoy.filters.http.grpc_web
          - name: envoy.filters.http.cors
          - name: envoy.filters.http.router

  clusters:
  - name: grpc_backend
    type: logical_dns
    http2_protocol_options: {}   # Required for gRPC
    lb_policy: round_robin
    load_assignment:
      cluster_name: grpc_backend
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: host.containers.internal  # podmanâ€™s way to reach host machine
                port_value: 50051  # your Dart gRPC daemon port
